var n=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports);var p=n((mt,ie)=>{var{Sequelize:as}=require("../node_modules/sequelize/lib/index.js"),ns=process.cwd(),ls=`${ns}/.env.production`;require("../node_modules/dotenv/lib/main.js").config({path:ls});var{MYSQL_DATABASE:is,MYSQL_USER:cs,MYSQL_PASSWORD:ds,MYSQL_HOST:ps,MYSQL_PORT:ys}=process.env,le=new as(is,cs,ds,{host:ps,port:ys,ssl:!0,dialect:"mysql"}),ms=async()=>{try{await le.authenticate(),console.log("Connection to database has been established successfully.")}catch(r){return console.log("Error connecting to database:",r),process.exit(1)}return null};ie.exports={connectToDatabase:ms,sequelize:le}});var de=n((qt,ce)=>{var qs=(r,t,s,e)=>{let o=r.message||"Internal Server Error",u=r.statusCode||500;r.name==="SequelizeValidationError"&&(o=`These fields should not be empty: ${r.errors.map(l=>l.path).join(", ")}`,u=400),r.name==="SequelizeUniqueConstraintError"&&(o=`The ${r.errors.map(l=>l.path)[0]} is already taken`,u=400),s.status(u).json({status:"fail",message:o})};ce.exports=qs});var ye=n((Nt,pe)=>{var Ns=r=>(t,s,e)=>Promise.resolve(r(t,s,e)).catch(e);pe.exports=Ns});var $=n((_t,me)=>{var{DataTypes:x,Model:_s}=require("../node_modules/sequelize/lib/index.js"),{sequelize:Ts}=p(),D=class extends _s{};D.init({idUser:{type:x.INTEGER,primaryKey:!0,autoIncrement:!0},nameUser:{type:x.STRING,allowNull:!1},email:{type:x.STRING,allowNull:!1,unique:!0},password:{type:x.STRING,allowNull:!1}},{sequelize:Ts,tableName:"usuario",timestamps:!1,modelName:"User",underscored:!0});me.exports=D});var Ne=n((Tt,qe)=>{var{DataTypes:T,Model:gs}=require("../node_modules/sequelize/lib/index.js"),{sequelize:Es}=p(),O=class extends gs{};O.init({idUserDetails:{type:T.INTEGER,primaryKey:!0,autoIncrement:!0},phoneNumber:{type:T.STRING,allowNull:!0},lastName:{type:T.STRING,allowNull:!0},emailRecovery:{type:T.STRING,allowNull:!0,unique:!0,validate:{isEmail:!0}},school:{type:T.STRING,allowNull:!0},profilePicture:{type:T.STRING,allowNull:!0}},{sequelize:Es,tableName:"detalles_usuario",timestamps:!1,modelName:"UserDetails",underscored:!0});qe.exports=O});var ge=n((gt,Te)=>{var{DataTypes:_e,Model:Rs}=require("../node_modules/sequelize/lib/index.js"),{sequelize:fs}=p(),G=class extends Rs{};G.init({idUserType:{type:_e.INTEGER,allowNull:!1,autoIncrement:!0,primaryKey:!0},roleName:{type:_e.STRING,allowNull:!1,unique:!0,default:"Alumno"}},{sequelize:fs,tableName:"tipo_usuario",timestamps:!1,modelName:"UserType",underscored:!0});Te.exports=G});var F=n((Et,Ee)=>{var{DataTypes:M,Model:Cs}=require("../node_modules/sequelize/lib/index.js"),{sequelize:ws}=p(),A=class extends Cs{};A.init({idCourse:{type:M.INTEGER,primaryKey:!0,autoIncrement:!0,allowNull:!1},idTeacher:{type:M.INTEGER,allowNull:!1},name:{type:M.STRING,allowNull:!1},banner:{type:M.STRING,allowNull:!1}},{sequelize:ws,tableName:"curso",timestamps:!1,modelName:"Course",underscored:!0});Ee.exports=A});var fe=n((Rt,Re)=>{var{DataTypes:i,Model:Ss}=require("../node_modules/sequelize/lib/index.js"),{sequelize:Is}=p(),k=class extends Ss{};k.init({idCourseDetails:{type:i.INTEGER,primaryKey:!0,autoIncrement:!0,allowNull:!1},idCourse:{type:i.INTEGER,allowNull:!1},idCategory:{type:i.INTEGER,allowNull:!1},resume:{type:i.STRING,allowNull:!1},updatedAt:{type:i.DATE,allowNull:!1},language:{type:i.STRING,allowNull:!1},filesCount:{type:i.INTEGER,allowNull:!1},rating:{type:i.INTEGER,allowNull:!1},price:{type:i.FLOAT,allowNull:!1},discount:{type:i.FLOAT,allowNull:!1},benefits:{type:i.STRING,allowNull:!1},targetPublic:{type:i.STRING,allowNull:!1},description:{type:i.STRING,allowNull:!1}},{sequelize:Is,tableName:"detalles_curso",timestamps:!1,modelName:"CourseDetails",underscored:!0});Re.exports=k});var we=n((ft,Ce)=>{var{DataTypes:J,Model:hs}=require("../node_modules/sequelize/lib/index.js"),{sequelize:bs}=p(),Us=$(),xs=F(),v=class extends hs{};v.init({idStudentCourse:{type:J.INTEGER,allowNull:!1,autoIncrement:!0,primaryKey:!0},idStudent:{type:J.INTEGER,allowNull:!1,references:{model:Us,key:"id_user"}},idCourse:{type:J.INTEGER,allowNull:!1,references:{model:xs,key:"id_course"}}},{sequelize:bs,tableName:"estudiantes_cursos",timestamps:!1,modelName:"StudentsCourses",underscored:!0});Ce.exports=v});var g=n((Ct,Ie)=>{var{sequelize:Ds}=p(),q=$(),W=Ne(),B=ge(),I=F(),Q=fe(),Se=we();Ds.sync({force:!1}).then(()=>{console.log("Databases dropped & tables created!")});q.hasOne(W,{foreignKey:"id_user",as:"details"});q.hasOne(B,{foreignKey:"id_user",as:"role"});W.belongsTo(q,{foreignKey:"id_user",as:"user"});B.belongsTo(q,{foreignKey:"id_user",as:"user"});I.hasOne(Q,{foreignKey:"id_course",as:"details"});Q.belongsTo(I,{foreignKey:"id_course",as:"course"});q.belongsToMany(I,{through:Se,foreignKey:"id_user",otherKey:"id_course",as:"courses"});I.belongsToMany(q,{through:Se,foreignKey:"id_course",otherKey:"id_user",as:"students"});Ie.exports={User:q,UserDetails:W,UserType:B,Course:I,CourseDetails:Q}});var be=n((wt,he)=>{var Os=require("../node_modules/jsonwebtoken/index.js"),{User:Gs}=g(),Ms=async(r,t,s)=>{if(!r.headers.authorization)return s({message:"Necesitas estar logueado para acceder a este recurso",statusCode:401});let e=r.headers.authorization.split(" ")[1];console.log("token: ",e);try{let o=Os.verify(e,"shhshshs");console.log("decodeToken",o);let u=await Gs.findByPk(o.user.id);if(!u)return s({message:"El usuario no existe",statusCode:400});r.user=u,s()}catch{return s({message:"Token inv\xE1lido",statusCode:401})}};he.exports=Ms});var E=n((St,Ue)=>{var As=de(),ks=ye(),vs=be();Ue.exports={errorHandler:As,asyncHandler:ks,userTokenExtractor:vs}});var Ge=n((It,Oe)=>{var xe=require("../node_modules/jsonwebtoken/index.js"),V=require("../node_modules/bcrypt/bcrypt.js"),{asyncHandler:Ls}=E(),{User:De,UserDetails:zs,UserType:Ks}=g(),Ps=Ls(async(r,t,s)=>{let{info:e,details:o,role:u}=r.body,a=await De.create(e),l=await zs.create({id_user:a.idUser,lastName:o.lastName}),c=await Ks.create({id_user:a.idUser,roleName:u}),m=await V.genSalt(10);a.password=await V.hash(a.password,m),await a.save(),await l.save(),await c.save();let w={user:{id:a.idUser}},S=xe.sign(w,"shhshshs");return t.status(201).json({status:"ok",data:S})}),js=async(r,t,s)=>{let{email:e,password:o}=r.body,u=await De.findOne({where:{email:e}});if(!u)return s({message:"El usuario no existe",statusCode:400});if(!await V.compare(o,u.password))return s({message:"Contrase\xF1a incorrecta",statusCode:400});let l={user:{id:u.idUser}},c=xe.sign(l,"shhshshs");return t.status(200).json({status:"ok",data:c})};Oe.exports={signup:Ps,login:js}});var ke=n((ht,Ae)=>{var{User:Hs,UserDetails:Y,UserType:Me}=g(),{asyncHandler:$s}=E(),Fs=async(r,t)=>{let s=await Y.findAll();return t.status(200).json({status:"ok",data:s})},Js=async(r,t)=>{let s=await Me.findAll();return t.status(200).json({status:"ok",data:s})},Ws=$s(async(r,t,s)=>{let e=r.user.idUser,o=r.body;return await Y.update(o,{where:{id_user:e}}),t.status(200).json({status:"ok",data:"Usuario actualizado correctamente"})}),Bs=async(r,t)=>{let s=await Hs.findByPk(r.user.idUser,{attributes:{exclude:["password"]},include:[{model:Y,as:"details",attributes:{exclude:["id","id_user"]}},{model:Me,as:"role",attributes:{exclude:["id_user","idUserType"]}}]});return t.status(200).json({status:"ok",data:s})};Ae.exports={getUserDetails:Fs,getUserRoles:Js,fillUserDetails:Ws,me:Bs}});var Le=n((bt,ve)=>{var X=class{static sendResponse(t,s,e){return Number(s)>=400?t.status(s).json({code:s,errors:e}):t.status(s).json({code:s,data:e})}};ve.exports=X});var Z=n((Ut,ze)=>{var Qs=Le();ze.exports={ApiUtils:Qs}});var je=n((xt,Pe)=>{var{QueryTypes:R}=require("../node_modules/sequelize/lib/index.js"),{sequelize:f}=p(),{ApiUtils:d}=Z(),{Course:ee,CourseDetails:Ke}=g(),se=class{static async findAllCourses(t,s){try{let e=t.query.details==="true",o="c.id_course, c.id_teacher, c.name, c.banner";o+=e?", dc.id_category, dc.resume, dc.updated_at, dc.language, dc.files_count, dc.rating, dc.price, dc.discount, dc.benefits, dc.target_public, dc.description":"";let a=`SELECT ${o} FROM curso c`;a+=e?" INNER JOIN detalles_curso dc ON c.id_course = dc.id_course":"";let l=await f.query(a,{type:R.SELECT});return d.sendResponse(s,200,l)}catch(e){return console.log(e),d.sendResponse(s,500,e)}}static async findCourseById(t,s){try{let{idCourse:e}=t.params,u="SELECT id_course, id_teacher, name, banner FROM curso WHERE id_course = ?",a=await f.query(u,{type:R.SELECT,replacements:[e],model:ee,mapToModel:!0});return d.sendResponse(s,200,a)}catch(e){return console.log(e),d.sendResponse(s,500,e)}}static async createCourse(t,s){try{let{idTeacher:e,name:o,banner:u}=t.body,a="INSERT INTO curso (id_teacher, name, banner) VALUES (?, ?, ?)",[l,c]=await f.query(a,{type:R.INSERT,replacements:[e,o,u],model:ee,mapToModel:!0});return console.log({results:l,metadata:c}),d.sendResponse(s,200,l)}catch(e){return console.log(e),d.sendResponse(s,500,e)}}static async createCourseDetails(t,s){try{let{idCourse:e,idCategory:o,resume:u,updatedAt:a,language:l,filesCount:c,rating:m,price:w,discount:S,benefits:K,targetPublic:P,description:j}=t.body,H="INSERT INTO detalles_curso (id_course, id_category, resume, updated_at, language, files_count, rating, price, discount, benefits, target_public, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",[U,ne]=await f.query(H,{type:R.INSERT,replacements:[e,o,u,a,l,c,m,w,S,K,P,j],model:Ke,mapToModel:!0});return d.sendResponse(s,200,U)}catch(e){return console.log(e),d.sendResponse(s,500,e)}}static async updateCourse(t,s){try{let{idCourse:e}=t.params,{idTeacher:o,name:u,banner:a}=t.body,l="UPDATE curso SET id_teacher=?, name=?, banner=? WHERE id_course=?",[c,m]=await f.query(l,{type:R.UPDATE,replacements:[o,u,a,e],model:ee,mapToModel:!0});return console.log({results:c,metadata:m}),d.sendResponse(s,200,c)}catch(e){return console.log(e),d.sendResponse(s,500,e)}}static async updateCourseDetails(t,s){try{let{idCourse:e}=t.params,{idCategory:o,resume:u,updatedAt:a,language:l,filesCount:c,rating:m,price:w,discount:S,benefits:K,targetPublic:P,description:j}=t.body,H="UPDATE detalles_curso SET id_category=?, resume=?, updated_at=?, language=?, files_count=?, rating=?, price=?, discount=?, benefits=?, target_public=?, description=? WHERE id_course=?",[U,ne]=await f.query(H,{type:R.UPDATE,replacements:[o,u,a,l,c,m,w,S,K,P,j,e],model:Ke,mapToModel:!0});return console.log({results:U,metadata:ne}),d.sendResponse(s,200,U)}catch(e){return console.log(e),d.sendResponse(s,500,e)}}};Pe.exports=se});var $e=n((Dt,He)=>{var{QueryTypes:te}=require("../node_modules/sequelize/lib/index.js"),{sequelize:re}=p(),{ApiUtils:y}=Z(),{StudentsCourses:Vs}=g(),oe=class{static async enrollInCourse(t,s){try{let e=t.user.idUser,o=t.params.idCourse,u="INSERT INTO estudiantes_cursos (id_student, id_course) VALUES (?, ?)",[a,l]=await re.query(u,{type:te.INSERT,replacements:[e,o],mapToModel:!0,model:Vs});return console.log("StudentsCoursesController - enrollInCourse()",{results:a,metadata:l}),y.sendResponse(s,200,a)}catch(e){return console.log(e),y.sendResponse(s,500,e)}}static async getStudentCourses(t,s){try{let{expand:e}=t.query,o="id_student_course, id_student, id_course",u=`SELECT ${o} FROM estudiantes_cursos`;e&&e==="student"&&(o+=", name, email",u+=" INNER JOIN usuario ON estudiantes_cursos.id_student = usuario.id_user"),e&&e==="course"&&(o+=", title, description",u=" INNER JOIN curso ON estudiantes_cursos.id_course = curso.id_course"),e&&e==="all"&&(o="ec.id_student_course, ec.id_student, ec.id_course, u.name, u.email, c.name, c.title, description",u=`SELECT ${o} FROM estudiantes_cursos ec INNER JOIN usuario u ON estudiantes_cursos.id_student = usuario.id_user INNER JOIN curso c ON estudiantes_cursos.id_course = curso.id_course`);let a=await re.query(u,{type:te.SELECT});return y.sendResponse(s,200,a)}catch(e){return console.log(e),y.sendResponse(s,500,e)}}static async getStudentCourseById(t,s){try{let{idStudentCourse:e}=t.params;if(!e)return y.sendResponse(s,400,"idStudentCourse is required");if(isNaN(e))return y.sendResponse(s,400,"idStudentCourse is not a number");let u="SELECT id_student_course, id_student, id_course FROM estudiantes_cursos";u+=" WHERE id_student_course = ?";let a=await re.query(u,{type:te.SELECT,replacements:[e]});return y.sendResponse(s,200,a)}catch(e){return console.log(e),y.sendResponse(s,500,e)}}};He.exports=oe});var h=n((Ot,Fe)=>{var Ys=Ge(),Xs=ke(),Zs=je(),et=$e();Fe.exports={authController:Ys,userController:Xs,CourseController:Zs,StudentsCoursesController:et}});var Be=n((Gt,We)=>{var ue=require("../node_modules/express/index.js").Router(),{authController:Je}=h();ue.route("/signup").post(Je.signup);ue.route("/login").post(Je.login);We.exports=ue});var Ye=n((Mt,Ve)=>{var b=require("../node_modules/express/index.js").Router(),{userController:L}=h(),{userTokenExtractor:Qe}=E();b.route("/details").get(L.getUserDetails);b.route("/roles").get(L.getUserRoles);b.route("/me").get(Qe,L.me);b.route("/me").put(Qe,L.fillUserDetails);Ve.exports=b});var Ze=n((At,Xe)=>{var N=require("../node_modules/express/index.js").Router(),{CourseController:C}=h();N.route("/").get(C.findAllCourses);N.route("/:idCourse").get(C.findCourseById);N.route("/").post(C.createCourse);N.route("/details").post(C.createCourseDetails);N.route("/:idCourse").put(C.updateCourse);N.route("/details/:idCourse").put(C.updateCourseDetails);Xe.exports=N});var ss=n((kt,es)=>{var z=require("../node_modules/express/index.js").Router(),{StudentsCoursesController:ae}=h(),{userTokenExtractor:st}=E();z.route("/").get(ae.getStudentCourses);z.route("/:idStudentCourse").get(ae.getStudentCourseById);z.route("/:idCourse").post(st,ae.enrollInCourse);es.exports=z});var rs=n((vt,ts)=>{var tt=Be(),rt=Ye(),ot=Ze(),ut=ss();ts.exports={authRoute:tt,userRoute:rt,courseRoute:ot,enrollRoute:ut}});var us=require("../node_modules/express/index.js");require("../node_modules/dotenv/lib/main.js").config();var{connectToDatabase:at}=p(),{authRoute:nt,userRoute:lt,courseRoute:it,enrollRoute:ct}=rs(),{errorHandler:dt}=E(),os=process.env.PORT||3e3,_=us();_.use(us.json());_.use("/api/auth",nt);_.use("/api/user",lt);_.use("/api/course",it);_.use("/api/enroll",ct);_.use(dt);var pt=async()=>{await at(),_.listen(os,()=>{console.log(`Server running on port ${os}`)})};pt();
